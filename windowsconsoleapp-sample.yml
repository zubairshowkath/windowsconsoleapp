# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

stages:
- stage: Copy
  variables:
    environment:  Dev
  jobs:
  - job: FirstJob
    steps:
    - powershell: echo Build FirstJob
    - powershell: echo $env:PIPELINELEVELVARIABLE
    - bash: echo $(environment)
    #- bash: echo $(Build.Source)
    - bash: echo "Agent.OS - $(Agent.OS)" 
    - bash: echo "Agent.BuildDirectory - $(Agent.BuildDirectory)"
    - powershell: Write-Host "System.DefaultWorkingDirectory - $(System.DefaultWorkingDirectory)"
    - powershell: Dir $(System.DefaultWorkingDirectory)
    #- powershell: cd $(System.DefaultWorkingDirectory)\netcoreapp3.1
    #- bash: echo $(Build.ArtifactStagingDirectory)
    # - script: date /t
    #   displayName: Get the date
    # - script: dir
    #   workingDirectory: $(Agent.BuildDirectory)
    #   displayName: List contents of a folder
    - task: CmdLine@2
      inputs:
        script: 'HelloWorld.exe'
    # - task: CopyFiles@2
    #   inputs:
    #     SourceFolder: '$(System.DefaultWorkingDirectory)'
    #     Contents: '**'
    #     TargetFolder: '$(Build.ArtifactStagingDirectory)'
  #   - task: CmdLine@2
  #     inputs:
  #       script: |
  #         echo Write your commands here
  #         echo Hello world
  #       #workingDirectory: # (Optional) Specify the working directory in which you want to run the command. If you leave it empty, the working directory is $(Build.SourcesDirectory).
  #       #failOnStderr: false # Optional
  # - job: SecondJob
  #   steps:
  #   - powershell: echo Build SecondJob
  #   - powershell: Write-Host "This is a script that could use $env:SYSTEM_ACCESSTOKEN"
  #     env:
  #       SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    